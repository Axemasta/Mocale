name: Mocale Release

on:
  workflow_dispatch:
    inputs:
      artifact-name:
        type: string
        description: The name of the artifact.
        default: drop
      artifacts:
        type: string
        description: The path to the artifacts.
        default: "Artifacts/*.nupkg"
      release-title:
        type: string
        description: The title of the release.
        default: "Release"
        required: true
      release-notes:
        type: string
        description: The notes for the release.
        default: "Notes..."
        required: true
      artifactErrorsFailBuild:
        type: boolean
        description: Whether to fail the build if there are errors in the artifact.
        default: true

jobs:
  github-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download artifacts
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        name: ${{ inputs.artifact-name }}
        repo: Axemasta/Mocale
        workflow: mocale-ci.yml
        path: Artifacts/
        search_artifacts: true

    - name: Process NuGet Version
      shell: pwsh
      working-directory: Artifacts/
      id: process-version
      run: |
        $Artifact = Get-ChildItem -Recurse | Where-Object { $_.Name.EndsWith('.nupkg') -and $_.Name.StartsWith('Mocale.') } | Select-Object -First 1
        $ArtifactName = $Artifact.Name
        $Pattern = '\b\d+\.\d+\.\d+(-\w+)?\b'

        $Match = [regex]::Match($ArtifactName, $Pattern)

        if (!$Match.Success) {
            Write-Host "Unable to parse version number for artifact: $($ArtifactName)"
            exit
        }

        $ArtifactName = $Match.Value

        $IsPreRelease = $false

        if ($ArtifactName.EndsWith("-pre")) {
            $IsPreRelease = $true
        }

        Write-Host "Artifact name: $($ArtifactName)"
        Write-Host "Is pre release: $($IsPreRelease)"

        if ($IsPreRelease) {
            echo "is-preview=true" >> $IS_PRERELEASE
        } else {
          echo "is-preview=false" >> $IS_PRERELEASE
        }

        echo "version-name=$ArtifactName" >> $VERSION_NAME

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        tag: ${{ steps.process-version.outputs.VERSION_NAME }}
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - uses: ncipollo/release-action@main
      name: Create Release
      with:
        artifacts: ${{ inputs.artifacts }}
        artifactErrorsFailBuild: ${{ inputs.artifactErrorsFailBuild }}
        draft: true
        generateReleaseNotes: false
        name: ${{ inputs.release-title }}
        tag: ${{ steps.process-version.outputs.VERSION_NAME }}
        prerelease: ${{ steps.process-version.outputs.IS_PRERELEASE }}

    # Deploy To NuGet
